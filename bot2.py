import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
)

logging.basicConfig(level=logging.INFO)
BOT_TOKEN = "7772821435:AAH2hHaxGi3hkrFmFUQp90pzCR0AvfZwWJc"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def send_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    keyboard = [
        [InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç ‚úçÔ∏è", callback_data="test")],
        [InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –†–ü–ü üìñ", callback_data="info")],
        [InlineKeyboardButton("–ü–∏—Ç–∞–Ω–∏–µ üçΩÔ∏è", callback_data="nutrition")],
        [InlineKeyboardButton("–û –Ω–∞—Å ‚ÑπÔ∏è", callback_data="about")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ (—Ñ–∞–π–ª main.jpg –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)
    try:
        with open("main.jpg", "rb") as photo:
            await context.bot.send_photo(
                chat_id=chat_id, photo=photo, caption=text, reply_markup=reply_markup
            )
    except Exception:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        await context.bot.send_message(chat_id=chat_id, text=text, reply_markup=reply_markup)

# –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
async def back_to_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    await query.message.delete()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await send_main_menu(update, context)

# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫
async def handle_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data
    chat_id = update.effective_chat.id
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞
    await query.message.delete()

    if data == "test":
        text = "–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç. –ó–¥–µ—Å—å –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤."
        # –í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç. –†–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É —Ç–µ—Å—Ç–∞ –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ.
        keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_message(chat_id=chat_id, text=text, reply_markup=reply_markup)

    elif data == "info":
        text = (
            "–†–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è (–†–ü–ü) ‚Äî —ç—Ç–æ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ, "
            "–Ω–µ–≥–∞—Ç–∏–≤–Ω–æ –≤–ª–∏—è—é—â–µ–µ –Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –∏ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ —á–µ–ª–æ–≤–µ–∫–∞. "
            "–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: [—Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –†–ü–ü]."
        )
        keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        try:
            with open("brr.jpg", "rb") as photo:
                await context.bot.send_photo(
                    chat_id=chat_id, photo=photo, caption=text, reply_markup=reply_markup
                )
        except Exception:
            await context.bot.send_message(chat_id=chat_id, text=text, reply_markup=reply_markup)

    elif data == "nutrition":
        text = (
            "–ö–∞–∫ –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–≤–æ—é –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π?\n\n"
            "–§–æ—Ä–º—É–ª–∞ –¥–ª—è –º—É–∂—á–∏–Ω:\n"
            "BMR = 88,36 + (13,4 √ó –≤–µ—Å –≤ –∫–≥) + (4,8 √ó —Ä–æ—Å—Ç –≤ —Å–º) ‚Äì (5,7 √ó –≤–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö).\n\n"
            "–§–æ—Ä–º—É–ª–∞ –¥–ª—è –∂–µ–Ω—â–∏–Ω:\n"
            "BMR = 447,6 + (9,2 √ó –≤–µ—Å –≤ –∫–≥) + (3,1 √ó —Ä–æ—Å—Ç –≤ —Å–º) ‚Äì (4,3 √ó –≤–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö)."
        )
        keyboard = [
            [InlineKeyboardButton("–ü–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã", callback_data="products")],
            [InlineKeyboardButton("–†–∞—Å—á—ë—Ç –∫–∞–ª–æ—Ä–∏–π", callback_data="calories")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        try:
            with open("salat.jpg", "rb") as photo:
                await context.bot.send_photo(
                    chat_id=chat_id, photo=photo, caption=text, reply_markup=reply_markup
                )
        except Exception:
            await context.bot.send_message(chat_id=chat_id, text=text, reply_markup=reply_markup)

    elif data == "about":
        text = (
            "–û –Ω–∞—Å:\n\n"
            "–ö–æ–∑–ª–æ–≤–∞ –í–∞–ª–µ—Ä–∏—è –í–∏—Ç–∞–ª—å–µ–≤–Ω–∞ ‚Äî —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞.\n"
            "–¢–µ—Å—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Ç–æ–¥–∏–∫ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏ –∏ Eating Attitudes Test (EAT-26)."
        )
        keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        try:
            with open("face.jpg", "rb") as photo:
                await context.bot.send_photo(
                    chat_id=chat_id, photo=photo, caption=text, reply_markup=reply_markup
                )
        except Exception:
            await context.bot.send_message(chat_id=chat_id, text=text, reply_markup=reply_markup)

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –¥–ª—è "–ü–∏—Ç–∞–Ω–∏–µ"
    elif data == "products":
        text = (
            "–ü–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:\n\n"
            "‚Ä¢ –û–≤–æ—â–∏, —Ñ—Ä—É–∫—Ç—ã, —è–≥–æ–¥—ã\n"
            "‚Ä¢ –°—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã\n"
            "‚Ä¢ –ó–µ—Ä–Ω–æ–≤–æ–π —Ö–ª–µ–± –∏ —Ç.–¥."
        )
        keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="nutrition")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        try:
            with open("fructs.jpg", "rb") as photo:
                await context.bot.send_photo(
                    chat_id=chat_id, photo=photo, caption=text, reply_markup=reply_markup
                )
        except Exception:
            await context.bot.send_message(chat_id=chat_id, text=text, reply_markup=reply_markup)

    elif data == "calories":
        text = (
            "–î–ª—è —Ä–∞—Å—á—ë—Ç–∞ –∫–∞–ª–æ—Ä–∏–π –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /calc –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç."
        )
        keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="nutrition")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_message(chat_id=chat_id, text=text, reply_markup=reply_markup)

    else:
        # –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª–∏ callback ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await send_main_menu(update, context)

# –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –≤—ã–≤–æ–¥–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await send_main_menu(update, context)

def main():
    application = ApplicationBuilder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    application.add_handler(CallbackQueryHandler(back_to_menu, pattern=r"^back$"))
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    application.add_handler(CallbackQueryHandler(handle_menu))
    application.run_polling()

if __name__ == "__main__":
    main()
